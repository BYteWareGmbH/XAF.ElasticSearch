<?xml version="1.0" encoding="utf-8" ?>
<Project DefaultTargets="NugetAndDBUpdater" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="12.0">
  <PropertyGroup>
    <TPath>$(MSBuildExtensionsPath)\ExtensionPack\4.0\MSBuild.ExtensionPack.tasks</TPath>
    <TPath Condition="'$(MSBuildExtensionsPath64)'!=''">$(MSBuildExtensionsPath64)\ExtensionPack\4.0\MSBuild.ExtensionPack.tasks</TPath>
    <TPath Condition="Exists('$(MSBuildProjectDirectory)\..\..\Common\MSBuild.ExtensionPack.tasks')">$(MSBuildProjectDirectory)\..\..\Common\MSBuild.ExtensionPack.tasks</TPath>
  </PropertyGroup>
  <Import Project="$(TPath)"/>
  
  <PropertyGroup>
    <SevenZipExePath>$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\7-Zip', 'Path', null, RegistryView.Registry64))7z.exe</SevenZipExePath>
    <NugetExePath>"$(MSBuildProjectDirectory)\NuGet.exe"</NugetExePath>
    <BYteWareAssemblyVersion>0.0.0.0</BYteWareAssemblyVersion>
    <BYteWarePackageExists></BYteWarePackageExists>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <NugetSpecFiles>
      <IncludeReferencedProjects>-IncludeReferencedProjects</IncludeReferencedProjects>
    </NugetSpecFiles>
  </ItemDefinitionGroup>
  
  <ItemGroup>
    <NugetSpecFiles Include="**\*.nuspec" />
  </ItemGroup>

  <ItemGroup>
    <DBUpdaterProjectFiles Include="DBUpdater\*.csproj" />
    <DBUpdaterProjectFiles Include="DBUpdaterGUI\*.csproj" />
    <DBUpdaterProjectFiles Include="XAFSync\*.csproj" />
    <DBUpdaterProjectFiles Include="XPO.Sync\*.csproj" />
  </ItemGroup>

  <Target Name="RestorePackages">
    <Exec Command="$(NugetExePath) restore &quot;$(MSBuildProjectName).sln&quot;" />
  </Target>

  <Target Name="BYteWareAssemblyInfo" Outputs="@(AssemblyIdentities)" DependsOnTargets="RestorePackages">
    <ItemGroup>
      <BYteWareUtilsProject Include="BYteWare.Utils\*.csproj" />
    </ItemGroup>
    <MSBuild Projects="@(BYteWareUtilsProject)" Properties="Configuration=Release" Targets="Build">
      <Output TaskParameter="TargetOutputs" ItemName="BuiltAssemblies" />
    </MSBuild>
    <GetAssemblyIdentity AssemblyFiles="@(BuiltAssemblies)">
      <Output TaskParameter="Assemblies" ItemName="AssemblyIdentities" />
    </GetAssemblyIdentity>
    <PropertyGroup>
      <BYteWareAssemblyVersion>%(AssemblyIdentities.Version)</BYteWareAssemblyVersion>
    </PropertyGroup>
    <Message Text="BYteWareAssemblyInfo Version: $(BYteWareAssemblyVersion)"/>
  </Target>

  <Target Name="NuGetPackageExists" DependsOnTargets="BYteWareAssemblyInfo">
    <Exec Command="$(NugetExePath) list BYteWare.Utils -NonInteractive" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="NuGetListOutput" />
    </Exec>
    <PropertyGroup>
      <BYteWarePackageExists Condition="$(NuGetListOutput.Contains('$(BYteWareAssemblyVersion)'))">$(NuGetListOutput)</BYteWarePackageExists>
    </PropertyGroup>
    <Message Text="BYteWarePackageExists: $(BYteWarePackageExists)"/>
  </Target>
  
  <Target Name="BuildPackages" DependsOnTargets="NuGetPackageExists">
    <ItemGroup>
      <OldNuGetPackages Include="**\*.nupkg" Exclude="packages\**\*.nupkg"/>
      <ItemGroup>
        <NugetProjectFiles Include="@(NugetSpecFiles->'%(RelativeDir)%(filename).csproj')" />
        <NugetProjectFiles Condition="'%(filename)' == 'BYteWare.XAF.Licensing'">
          <IncludeReferencedProjects></IncludeReferencedProjects>
        </NugetProjectFiles>
      </ItemGroup>
    </ItemGroup>
    <Delete Files="@(OldNuGetPackages)" Condition="'$(BYteWarePackageExists)'==''" />    
    <Exec Command="$(NugetExePath) pack %(NugetProjectFiles.Identity) -Symbols -Build %(NugetProjectFiles.IncludeReferencedProjects) -NonInteractive -Prop Configuration=Release" Condition="'$(BYteWarePackageExists)'==''" />
  </Target>

  <Target Name="PushPackages">
    <ItemGroup>
      <NewNuGetPackages Include="**\*.symbols.nupkg" Exclude="packages\**\*.nupkg"/>
    </ItemGroup>
    <Exec Command="$(NugetExePath) push %(NewNuGetPackages.Identity) -NonInteractive -Source http://nuget.bytewa.re/nuget/BYteWare" />
    <ItemGroup>
      <NewNuGetPackages Include="**\*.nupkg" Exclude="packages\**\*.nupkg"/>
    </ItemGroup>
    <Delete Files="@(NewNuGetPackages)" />
  </Target>

  <Target Name="DBUpdater">
    <RemoveDir Directories="@(DBUpdaterProjectFiles->'%(rootdir)%(directory)bin\Release')" />
    <MSBuild BuildInParallel="true" Projects="%(DBUpdaterProjectFiles.Identity)" Properties="Configuration=Release" Targets="Build" />
    <RemoveDir Directories="@(DBUpdaterProjectFiles->'\\cosydb\Prog\XAF\%(RelativeDir)'->TrimEnd('\'))" />
    <ItemGroup>
      <DBUpdaterReleaseFiles Include="%(DBUpdaterProjectFiles.RelativeDir)bin\Release\**\*.dll" />
      <DBUpdaterReleaseFiles Include="%(DBUpdaterProjectFiles.RelativeDir)bin\Release\*.exe" />
      <DBUpdaterReleaseFiles Include="%(DBUpdaterProjectFiles.RelativeDir)bin\Release\*.exe.config" />
      <DBUpdaterReleaseFiles Include="XAFSync\bin\Release\quartz_jobs.xml" />
    </ItemGroup>
    <Delete Files="@(DBUpdaterProjectFiles->'\\cosydb\Prog\XAF\Archive\%(RelativeDir)'->TrimEnd('\')->'%(Identity).exe')" />
    <Copy SourceFiles="@(DBUpdaterReleaseFiles)" DestinationFiles="@(DBUpdaterReleaseFiles->'\\cosydb\Prog\XAF\%(RelativeDir)%(Filename)%(Extension)'->Replace('\bin\Release\', '\'))" />
    <Exec WorkingDirectory="%(rootdir)%(directory)bin\Release" Command="&quot;$(SevenZipExePath)&quot; a -sfx7z.sfx -t7z -mx=7 -ms -mmt -r -xr!Thumbs.db &quot;@(DBUpdaterProjectFiles->'\\cosydb\Prog\XAF\Archive\%(RelativeDir)'->TrimEnd('\')->'%(Identity).exe')&quot; *.dll quartz_jobs*.xml *.exe*" />
  </Target>
  
  <Target Name="NugetPackAndPush" DependsOnTargets="BuildPackages">
    <!-- http://nuget.bytewa.re/nuget/BYteWare/Packages()?$filter=Id%20eq%20%27BYteWare.Utils%27%20and%20Version%20eq%20%2715.2.9.67%27&$select=Version prüft ob es die Version schon auf dem NuGet Server gibt und GetAssemblyIdentity Task liefert die Versionsnummer
    Alternativ
    nuget list "BYteWare.Utils 15.2.9.66" -NonInteractive
    <Exec ... ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>    
    und im Ergebnis suchen ob BYteWare.Utils vorkommt
    -->
    <CallTarget Targets="PushPackages" Condition="'$(BYteWarePackageExists)'==''" />
  </Target>

  <Target Name="NugetAndDBUpdater" DependsOnTargets="NugetPackAndPush;DBUpdater">    
  </Target>

</Project>  
